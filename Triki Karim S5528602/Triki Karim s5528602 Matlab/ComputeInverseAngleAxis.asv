function [theta,v] = ComputeInverseAngleAxis(R)

%EULER REPRESENTATION: Given a tensor rotation matrices this function
% should output the equivalent angle-axis representation values,
% respectively 'theta' (angle), 'v' (axis) 
% SUGGESTED FUNCTIONS
    % size()
    % eye()
    % eig()
    % find()
    % abs()
    % det()
    % NB: Enter a square, 3x3 proper-orthogonal matrix to calculate its angle
    % and axis of rotation. Error messages must be displayed if the matrix
    % does not satisfy the rotation matrix criteria.

    % Check matrix R to see if its size is 3x3
     [x, y] = size(R);
      if x==3 && y==3
        % Check matrix R to see if it is orthogonal
         I=eye(3);
          if R*R'== I
            % Check matrix R to see if it is proper: det(R) = 1
            if det(R) == 1
                % Compute the angle of rotation 
                theta= acos((tr(R)-1)/2);
                % Calculate eigenvalues and eigenvectors of R
                %F : eigen of Vectors | diag(D): eigen of vectors
                [F,D]=eig(R);
                diag(D)
                % Compute the axis of rotation
                v = (vex((R-R')/2))/sin (theta);
            else
              error('DETERMINANT OF THE INPUT MATRIX IS 0')
            end
        else
           error('NOT ORTHOGONAL INPUT MATRIX')
          end
    else
       error('WRONG SIZE OF THE INPUT MATRIX')
 
     end
end
[a, b]=size(R);
  M=(R-R')/2
  vex=[0.5*(M(3,2)-M(2,3));0.5*(M(1,3)-M(3,1));0.5*(M(2,1)-M(1,2))];
   if a==3 && b==3
       if abs(1-diag(R*R'))<=0.001
           if abs


